/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as McpLayoutImport } from './routes/mcp/layout'
import { Route as IndexImport } from './routes/index'
import { Route as McpIndexImport } from './routes/mcp/index'
import { Route as McpAgentIdImport } from './routes/mcp/$agentId'
import { Route as AdminUploadOpenapiImport } from './routes/admin/upload-openapi'
import { Route as ApiAuthOauth2AuthorizeImport } from './routes/api.auth.oauth2.authorize'
import { Route as ApiAuthCallbackProviderImport } from './routes/api.auth.callback.$provider'

// Create/Update Routes

const McpLayoutRoute = McpLayoutImport.update({
  id: '/mcp',
  path: '/mcp',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const McpIndexRoute = McpIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => McpLayoutRoute,
} as any)

const McpAgentIdRoute = McpAgentIdImport.update({
  id: '/$agentId',
  path: '/$agentId',
  getParentRoute: () => McpLayoutRoute,
} as any)

const AdminUploadOpenapiRoute = AdminUploadOpenapiImport.update({
  id: '/admin/upload-openapi',
  path: '/admin/upload-openapi',
  getParentRoute: () => rootRoute,
} as any)

const ApiAuthOauth2AuthorizeRoute = ApiAuthOauth2AuthorizeImport.update({
  id: '/api/auth/oauth2/authorize',
  path: '/api/auth/oauth2/authorize',
  getParentRoute: () => rootRoute,
} as any)

const ApiAuthCallbackProviderRoute = ApiAuthCallbackProviderImport.update({
  id: '/api/auth/callback/$provider',
  path: '/api/auth/callback/$provider',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/mcp': {
      id: '/mcp'
      path: '/mcp'
      fullPath: '/mcp'
      preLoaderRoute: typeof McpLayoutImport
      parentRoute: typeof rootRoute
    }
    '/admin/upload-openapi': {
      id: '/admin/upload-openapi'
      path: '/admin/upload-openapi'
      fullPath: '/admin/upload-openapi'
      preLoaderRoute: typeof AdminUploadOpenapiImport
      parentRoute: typeof rootRoute
    }
    '/mcp/$agentId': {
      id: '/mcp/$agentId'
      path: '/$agentId'
      fullPath: '/mcp/$agentId'
      preLoaderRoute: typeof McpAgentIdImport
      parentRoute: typeof McpLayoutImport
    }
    '/mcp/': {
      id: '/mcp/'
      path: '/'
      fullPath: '/mcp/'
      preLoaderRoute: typeof McpIndexImport
      parentRoute: typeof McpLayoutImport
    }
    '/api/auth/callback/$provider': {
      id: '/api/auth/callback/$provider'
      path: '/api/auth/callback/$provider'
      fullPath: '/api/auth/callback/$provider'
      preLoaderRoute: typeof ApiAuthCallbackProviderImport
      parentRoute: typeof rootRoute
    }
    '/api/auth/oauth2/authorize': {
      id: '/api/auth/oauth2/authorize'
      path: '/api/auth/oauth2/authorize'
      fullPath: '/api/auth/oauth2/authorize'
      preLoaderRoute: typeof ApiAuthOauth2AuthorizeImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface McpLayoutRouteChildren {
  McpAgentIdRoute: typeof McpAgentIdRoute
  McpIndexRoute: typeof McpIndexRoute
}

const McpLayoutRouteChildren: McpLayoutRouteChildren = {
  McpAgentIdRoute: McpAgentIdRoute,
  McpIndexRoute: McpIndexRoute,
}

const McpLayoutRouteWithChildren = McpLayoutRoute._addFileChildren(
  McpLayoutRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/mcp': typeof McpLayoutRouteWithChildren
  '/admin/upload-openapi': typeof AdminUploadOpenapiRoute
  '/mcp/$agentId': typeof McpAgentIdRoute
  '/mcp/': typeof McpIndexRoute
  '/api/auth/callback/$provider': typeof ApiAuthCallbackProviderRoute
  '/api/auth/oauth2/authorize': typeof ApiAuthOauth2AuthorizeRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin/upload-openapi': typeof AdminUploadOpenapiRoute
  '/mcp/$agentId': typeof McpAgentIdRoute
  '/mcp': typeof McpIndexRoute
  '/api/auth/callback/$provider': typeof ApiAuthCallbackProviderRoute
  '/api/auth/oauth2/authorize': typeof ApiAuthOauth2AuthorizeRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/mcp': typeof McpLayoutRouteWithChildren
  '/admin/upload-openapi': typeof AdminUploadOpenapiRoute
  '/mcp/$agentId': typeof McpAgentIdRoute
  '/mcp/': typeof McpIndexRoute
  '/api/auth/callback/$provider': typeof ApiAuthCallbackProviderRoute
  '/api/auth/oauth2/authorize': typeof ApiAuthOauth2AuthorizeRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/mcp'
    | '/admin/upload-openapi'
    | '/mcp/$agentId'
    | '/mcp/'
    | '/api/auth/callback/$provider'
    | '/api/auth/oauth2/authorize'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin/upload-openapi'
    | '/mcp/$agentId'
    | '/mcp'
    | '/api/auth/callback/$provider'
    | '/api/auth/oauth2/authorize'
  id:
    | '__root__'
    | '/'
    | '/mcp'
    | '/admin/upload-openapi'
    | '/mcp/$agentId'
    | '/mcp/'
    | '/api/auth/callback/$provider'
    | '/api/auth/oauth2/authorize'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  McpLayoutRoute: typeof McpLayoutRouteWithChildren
  AdminUploadOpenapiRoute: typeof AdminUploadOpenapiRoute
  ApiAuthCallbackProviderRoute: typeof ApiAuthCallbackProviderRoute
  ApiAuthOauth2AuthorizeRoute: typeof ApiAuthOauth2AuthorizeRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  McpLayoutRoute: McpLayoutRouteWithChildren,
  AdminUploadOpenapiRoute: AdminUploadOpenapiRoute,
  ApiAuthCallbackProviderRoute: ApiAuthCallbackProviderRoute,
  ApiAuthOauth2AuthorizeRoute: ApiAuthOauth2AuthorizeRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/mcp",
        "/admin/upload-openapi",
        "/api/auth/callback/$provider",
        "/api/auth/oauth2/authorize"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/mcp": {
      "filePath": "mcp/layout.tsx",
      "children": [
        "/mcp/$agentId",
        "/mcp/"
      ]
    },
    "/admin/upload-openapi": {
      "filePath": "admin/upload-openapi.tsx"
    },
    "/mcp/$agentId": {
      "filePath": "mcp/$agentId.tsx",
      "parent": "/mcp"
    },
    "/mcp/": {
      "filePath": "mcp/index.tsx",
      "parent": "/mcp"
    },
    "/api/auth/callback/$provider": {
      "filePath": "api.auth.callback.$provider.tsx"
    },
    "/api/auth/oauth2/authorize": {
      "filePath": "api.auth.oauth2.authorize.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
