/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// biome-ignore-all
/*
 * ------------------------------------------------------------
 * ## This file was automatically generated by drizzle-zero  ##
 * ## Any changes you make to this file will be overwritten. ##
 * ##                                                        ##
 * ## Additionally, you should also exclude this file from   ##
 * ## your linter and/or formatter to prevent it from being  ##
 * ## checked or modified.                                   ##
 * ##                                                        ##
 * ## SOURCE: https://github.com/BriefHQ/drizzle-zero        ##
 * ------------------------------------------------------------
 */

import type { default as DrizzleConfigSchema } from "./drizzle-zero.config";

/**
 * The Zero schema object.
 * This type is auto-generated from your Drizzle schema definition.
 */
export const schema = {
  tables: {
    agentMcpServers: {
      name: "agentMcpServers",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["agentMcpServers"]["columns"]["id"]["customType"],
        },
        agentId: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["agentMcpServers"]["columns"]["agentId"]["customType"],
          serverName: "agent_id",
        },
        mcpServerId: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["agentMcpServers"]["columns"]["mcpServerId"]["customType"],
          serverName: "mcp_server_id",
        },
        organizationId: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["agentMcpServers"]["columns"]["organizationId"]["customType"],
          serverName: "organization_id",
        },
        createdBy: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["agentMcpServers"]["columns"]["createdBy"]["customType"],
          serverName: "created_by",
        },
        configJson: {
          type: "json",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["agentMcpServers"]["columns"]["configJson"]["customType"],
          serverName: "config_json",
        },
      },
      primaryKey: ["id"],
      serverName: "agent_mcp_servers",
    },
    agentMcpTools: {
      name: "agentMcpTools",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["agentMcpTools"]["columns"]["id"]["customType"],
        },
        agentId: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["agentMcpTools"]["columns"]["agentId"]["customType"],
          serverName: "agent_id",
        },
        organizationId: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["agentMcpTools"]["columns"]["organizationId"]["customType"],
          serverName: "organization_id",
        },
        createdBy: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["agentMcpTools"]["columns"]["createdBy"]["customType"],
          serverName: "created_by",
        },
        mcpServerId: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["agentMcpTools"]["columns"]["mcpServerId"]["customType"],
          serverName: "mcp_server_id",
        },
        mcpToolId: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["agentMcpTools"]["columns"]["mcpToolId"]["customType"],
          serverName: "mcp_tool_id",
        },
      },
      primaryKey: ["id"],
      serverName: "agent_mcp_tools",
    },
    agents: {
      name: "agents",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["agents"]["columns"]["id"]["customType"],
        },
        name: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["agents"]["columns"]["name"]["customType"],
        },
        instructions: {
          type: "string",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["agents"]["columns"]["instructions"]["customType"],
        },
        organizationId: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["agents"]["columns"]["organizationId"]["customType"],
          serverName: "organization_id",
        },
        createdBy: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["agents"]["columns"]["createdBy"]["customType"],
          serverName: "created_by",
        },
        createdAt: {
          type: "number",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["agents"]["columns"]["createdAt"]["customType"],
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["agents"]["columns"]["updatedAt"]["customType"],
          serverName: "updated_at",
        },
      },
      primaryKey: ["id"],
    },
    mcpServers: {
      name: "mcpServers",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["mcpServers"]["columns"]["id"]["customType"],
        },
        externalId: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["mcpServers"]["columns"]["externalId"]["customType"],
          serverName: "external_id",
        },
        name: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["mcpServers"]["columns"]["name"]["customType"],
        },
        summary: {
          type: "string",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["mcpServers"]["columns"]["summary"]["customType"],
        },
        description: {
          type: "string",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["mcpServers"]["columns"]["description"]["customType"],
        },
        instructions: {
          type: "string",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["mcpServers"]["columns"]["instructions"]["customType"],
        },
        iconUrl: {
          type: "string",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["mcpServers"]["columns"]["iconUrl"]["customType"],
          serverName: "icon_url",
        },
        developer: {
          type: "string",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["mcpServers"]["columns"]["developer"]["customType"],
        },
        developerUrl: {
          type: "string",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["mcpServers"]["columns"]["developerUrl"]["customType"],
          serverName: "developer_url",
        },
        sourceUrl: {
          type: "string",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["mcpServers"]["columns"]["sourceUrl"]["customType"],
          serverName: "source_url",
        },
        configSchemaJson: {
          type: "json",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["mcpServers"]["columns"]["configSchemaJson"]["customType"],
          serverName: "config_schema_json",
        },
        transportJson: {
          type: "json",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["mcpServers"]["columns"]["transportJson"]["customType"],
          serverName: "transport_json",
        },
        runsRemote: {
          type: "boolean",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["mcpServers"]["columns"]["runsRemote"]["customType"],
          serverName: "runs_remote",
        },
        runsLocal: {
          type: "boolean",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["mcpServers"]["columns"]["runsLocal"]["customType"],
          serverName: "runs_local",
        },
        organizationId: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["mcpServers"]["columns"]["organizationId"]["customType"],
          serverName: "organization_id",
        },
        createdBy: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["mcpServers"]["columns"]["createdBy"]["customType"],
          serverName: "created_by",
        },
        toolCount: {
          type: "number",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["mcpServers"]["columns"]["toolCount"]["customType"],
          serverName: "tool_count",
        },
        visibility: {
          type: "string",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["mcpServers"]["columns"]["visibility"]["customType"],
        },
        createdAt: {
          type: "number",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["mcpServers"]["columns"]["createdAt"]["customType"],
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["mcpServers"]["columns"]["updatedAt"]["customType"],
          serverName: "updated_at",
        },
      },
      primaryKey: ["id"],
      serverName: "mcp_servers",
    },
    mcpTools: {
      name: "mcpTools",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["mcpTools"]["columns"]["id"]["customType"],
        },
        name: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["mcpTools"]["columns"]["name"]["customType"],
        },
        organizationId: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["mcpTools"]["columns"]["organizationId"]["customType"],
          serverName: "organization_id",
        },
        displayName: {
          type: "string",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["mcpTools"]["columns"]["displayName"]["customType"],
          serverName: "display_name",
        },
        summary: {
          type: "string",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["mcpTools"]["columns"]["summary"]["customType"],
        },
        description: {
          type: "string",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["mcpTools"]["columns"]["description"]["customType"],
        },
        instructions: {
          type: "string",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["mcpTools"]["columns"]["instructions"]["customType"],
        },
        inputSchemaJson: {
          type: "json",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["mcpTools"]["columns"]["inputSchemaJson"]["customType"],
          serverName: "input_schema_json",
        },
        outputSchemaJson: {
          type: "json",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["mcpTools"]["columns"]["outputSchemaJson"]["customType"],
          serverName: "output_schema_json",
        },
        isReadonly: {
          type: "boolean",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["mcpTools"]["columns"]["isReadonly"]["customType"],
          serverName: "is_readonly",
        },
        isDestructive: {
          type: "boolean",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["mcpTools"]["columns"]["isDestructive"]["customType"],
          serverName: "is_destructive",
        },
        isIdempotent: {
          type: "boolean",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["mcpTools"]["columns"]["isIdempotent"]["customType"],
          serverName: "is_idempotent",
        },
        isOpenWorld: {
          type: "boolean",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["mcpTools"]["columns"]["isOpenWorld"]["customType"],
          serverName: "is_open_world",
        },
        mcpServerId: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["mcpTools"]["columns"]["mcpServerId"]["customType"],
          serverName: "mcp_server_id",
        },
        createdBy: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["mcpTools"]["columns"]["createdBy"]["customType"],
          serverName: "created_by",
        },
        createdAt: {
          type: "number",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["mcpTools"]["columns"]["createdAt"]["customType"],
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["mcpTools"]["columns"]["updatedAt"]["customType"],
          serverName: "updated_at",
        },
      },
      primaryKey: ["id"],
      serverName: "mcp_tools",
    },
    organizations: {
      name: "organizations",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["organizations"]["columns"]["id"]["customType"],
        },
        name: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["organizations"]["columns"]["name"]["customType"],
        },
        slug: {
          type: "string",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["organizations"]["columns"]["slug"]["customType"],
        },
        logo: {
          type: "string",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["organizations"]["columns"]["logo"]["customType"],
        },
        createdAt: {
          type: "number",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["organizations"]["columns"]["createdAt"]["customType"],
          serverName: "created_at",
        },
      },
      primaryKey: ["id"],
    },
    users: {
      name: "users",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["users"]["columns"]["id"]["customType"],
        },
        name: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["users"]["columns"]["name"]["customType"],
        },
        email: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["users"]["columns"]["email"]["customType"],
        },
        emailVerified: {
          type: "boolean",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["users"]["columns"]["emailVerified"]["customType"],
          serverName: "email_verified",
        },
        activeOrganizationId: {
          type: "string",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["users"]["columns"]["activeOrganizationId"]["customType"],
          serverName: "active_organization_id",
        },
        image: {
          type: "string",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["users"]["columns"]["image"]["customType"],
        },
      },
      primaryKey: ["id"],
    },
  },
  relationships: {
    agentMcpServers: {
      agent: [
        {
          sourceField: ["agentId"],
          destField: ["id"],
          destSchema: "agents",
          cardinality: "one",
        },
      ],
      agentMcpTools: [
        {
          sourceField: ["agentId", "mcpServerId"],
          destField: ["agentId", "mcpServerId"],
          destSchema: "agentMcpTools",
          cardinality: "many",
        },
      ],
      mcpServer: [
        {
          sourceField: ["mcpServerId"],
          destField: ["id"],
          destSchema: "mcpServers",
          cardinality: "one",
        },
      ],
    },
    agentMcpTools: {
      agent: [
        {
          sourceField: ["agentId"],
          destField: ["id"],
          destSchema: "agents",
          cardinality: "one",
        },
      ],
      agentMcpServer: [
        {
          sourceField: ["agentId", "mcpServerId"],
          destField: ["agentId", "mcpServerId"],
          destSchema: "agentMcpServers",
          cardinality: "one",
        },
      ],
      mcpTool: [
        {
          sourceField: ["mcpToolId"],
          destField: ["id"],
          destSchema: "mcpTools",
          cardinality: "one",
        },
      ],
    },
    agents: {
      agentMcpServers: [
        {
          sourceField: ["id"],
          destField: ["agentId"],
          destSchema: "agentMcpServers",
          cardinality: "many",
        },
      ],
    },
    mcpServers: {
      mcpTools: [
        {
          sourceField: ["id"],
          destField: ["mcpServerId"],
          destSchema: "mcpTools",
          cardinality: "many",
        },
      ],
      agentMcpServers: [
        {
          sourceField: ["id"],
          destField: ["mcpServerId"],
          destSchema: "agentMcpServers",
          cardinality: "many",
        },
      ],
    },
    mcpTools: {
      mcpServer: [
        {
          sourceField: ["mcpServerId"],
          destField: ["id"],
          destSchema: "mcpServers",
          cardinality: "one",
        },
      ],
      agentMcpTools: [
        {
          sourceField: ["id"],
          destField: ["mcpToolId"],
          destSchema: "agentMcpTools",
          cardinality: "many",
        },
      ],
    },
  },
} as const;

/**
 * Represents the Zero schema type.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Schema = typeof schema;
